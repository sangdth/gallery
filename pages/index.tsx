import Head from 'next/head';
import { gql, useQuery } from '@apollo/client';
import { Box, HStack } from '@chakra-ui/react';
/// import { useAuth } from '@nhost/react-auth';
import { WithPrivateRoute } from '../components/WithPrivateRoute';
import { auth } from '../lib/nhost';
import { Entity } from '../lib/enums';
import type { AggregateData, SiteType } from '../lib/types';

type SitesAggregateData = AggregateData<SiteType, Entity.Sites>;

export const SITES_AGGREGATE = gql`
  query SITES_AGGREGATE($userId: uuid!) {
    sites_aggregate(
      limit: 10,
      offset: 0,
      where: {user: {id: {_eq: $userId}}}
    ) {
      nodes {
        description
        id
        name
        slug
        status
        user {
          id
        }
      }
    }
  }
`;

export const INSERT_SITE_ONE = gql`
mutation INSERT_SITE_ONE($object: sites_insert_input!) {
  insert_sites_one(object: $object) {
    created_at
    id
    description
    name
    slug
  }
}

`;

function Home() {
  const { loading, data, error } = useQuery<SitesAggregateData>(
    SITES_AGGREGATE,
    {
      variables: {
        userId: auth.getClaim('x-hasura-user-id'),
      },
      context: {
        headers: {
          'x-hasura-role': 'me',
        },
      },
    },
  );

  const siteInput = {
    name: 'Site name',
    description: 'Site desc',
    slug: 'site-name',
    user_id: 'user-uuid',
  };

  const sites = data?.sites_aggregate?.nodes;

  if (loading && !data) {
    return <div>Loading...</div>;
  }

  if (error || !sites) {
    console.error(error); // eslint-disable-line
    return <div>Error getting sites data</div>;
  }

  console.log('### sites: ', sites);

  return (
    <>
      <Head>
        <title>Gallery</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <h1>
          Welcome to Next.js
        </h1>
      </main>

      {sites.map((site) => (
        <HStack key={site.id}>
          <Box>{site.name}</Box>
        </HStack>
      ))}
    </>
  );
}

export default WithPrivateRoute(Home);
