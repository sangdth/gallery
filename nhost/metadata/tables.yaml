- table:
    schema: auth
    name: account_providers
  object_relationships:
  - name: account
    using:
      foreign_key_constraint_on: account_id
  - name: provider
    using:
      foreign_key_constraint_on: auth_provider
- table:
    schema: auth
    name: account_roles
  object_relationships:
  - name: account
    using:
      foreign_key_constraint_on: account_id
  - name: roleByRole
    using:
      foreign_key_constraint_on: role
- table:
    schema: auth
    name: accounts
  object_relationships:
  - name: role
    using:
      foreign_key_constraint_on: default_role
  - name: user
    using:
      foreign_key_constraint_on: user_id
  array_relationships:
  - name: account_providers
    using:
      foreign_key_constraint_on:
        column: account_id
        table:
          schema: auth
          name: account_providers
  - name: account_roles
    using:
      foreign_key_constraint_on:
        column: account_id
        table:
          schema: auth
          name: account_roles
  - name: refresh_tokens
    using:
      foreign_key_constraint_on:
        column: account_id
        table:
          schema: auth
          name: refresh_tokens
  select_permissions:
  - role: me
    permission:
      columns:
      - active
      - created_at
      - custom_register_data
      - default_role
      - email
      - id
      - is_anonymous
      - mfa_enabled
      - ticket
      - ticket_expires_at
      - updated_at
      - user_id
      filter:
        user_id:
          _eq: X-Hasura-User-Id
- table:
    schema: auth
    name: providers
  array_relationships:
  - name: account_providers
    using:
      foreign_key_constraint_on:
        column: auth_provider
        table:
          schema: auth
          name: account_providers
- table:
    schema: auth
    name: refresh_tokens
  object_relationships:
  - name: account
    using:
      foreign_key_constraint_on: account_id
- table:
    schema: auth
    name: roles
  array_relationships:
  - name: account_roles
    using:
      foreign_key_constraint_on:
        column: role
        table:
          schema: auth
          name: account_roles
  - name: accounts
    using:
      foreign_key_constraint_on:
        column: default_role
        table:
          schema: auth
          name: accounts
- table:
    schema: public
    name: collections
  object_relationships:
  - name: site
    using:
      foreign_key_constraint_on: site_id
  - name: user
    using:
      foreign_key_constraint_on: user_id
  array_relationships:
  - name: images
    using:
      foreign_key_constraint_on:
        column: collection_id
        table:
          schema: public
          name: images
  - name: pages
    using:
      foreign_key_constraint_on:
        column: collection_id
        table:
          schema: public
          name: pages
  insert_permissions:
  - role: me
    permission:
      check: {}
      set:
        user_id: x-hasura-user-id
      columns:
      - description
      - id
      - name
      - site_id
      - status
      - type
      backend_only: false
  - role: user
    permission:
      check: {}
      set:
        user_id: x-hasura-user-id
      columns:
      - description
      - name
      - site_id
      - type
      backend_only: false
  select_permissions:
  - role: anonymous
    permission:
      columns:
      - description
      - id
      - name
      - status
      - type
      filter: {}
  - role: me
    permission:
      columns:
      - description
      - name
      - status
      - type
      - created_at
      - updated_at
      - id
      - site_id
      - user_id
      filter:
        user_id:
          _eq: X-Hasura-User-Id
      allow_aggregations: true
  - role: public
    permission:
      columns:
      - description
      - id
      - name
      - status
      - type
      filter: {}
  - role: user
    permission:
      columns:
      - created_at
      - description
      - id
      - name
      - site_id
      - status
      - type
      - updated_at
      filter: {}
      allow_aggregations: true
  update_permissions:
  - role: me
    permission:
      columns:
      - description
      - name
      - status
      - type
      filter:
        user_id:
          _eq: X-Hasura-User-Id
      check:
        user_id:
          _eq: X-Hasura-User-Id
      set:
        user_id: x-hasura-user-id
  - role: user
    permission:
      columns:
      - description
      - name
      - status
      - type
      filter:
        user_id:
          _eq: X-Hasura-User-Id
      check:
        user_id:
          _eq: X-Hasura-User-Id
  delete_permissions:
  - role: me
    permission:
      filter:
        user_id:
          _eq: X-Hasura-User-Id
  - role: user
    permission:
      filter:
        user_id:
          _eq: X-Hasura-User-Id
- table:
    schema: public
    name: images
  object_relationships:
  - name: collection
    using:
      foreign_key_constraint_on: collection_id
  - name: user
    using:
      foreign_key_constraint_on: user_id
  insert_permissions:
  - role: me
    permission:
      check: {}
      set:
        user_id: x-hasura-user-id
      columns:
      - collection_id
      - description
      - id
      - meta
      - name
      - path
      - status
      - user_id
      backend_only: false
  - role: user
    permission:
      check: {}
      set:
        collection_id: x-hasura-collection-id
        user_id: x-hasura-user-id
      columns:
      - meta
      - path
      - status
      backend_only: false
  select_permissions:
  - role: anonymous
    permission:
      columns:
      - collection_id
      - created_at
      - description
      - id
      - name
      - path
      - status
      - updated_at
      filter: {}
      limit: 100
      allow_aggregations: true
  - role: me
    permission:
      columns:
      - collection_id
      - created_at
      - description
      - id
      - meta
      - name
      - path
      - status
      - updated_at
      - user_id
      filter: {}
      allow_aggregations: true
  - role: public
    permission:
      columns:
      - collection_id
      - created_at
      - description
      - id
      - name
      - path
      - status
      - updated_at
      filter: {}
      limit: 100
      allow_aggregations: true
  - role: user
    permission:
      columns:
      - collection_id
      - created_at
      - description
      - id
      - meta
      - name
      - path
      - status
      - updated_at
      - user_id
      filter:
        user_id:
          _eq: X-Hasura-User-Id
      allow_aggregations: true
  update_permissions:
  - role: me
    permission:
      columns:
      - collection_id
      - meta
      - path
      - status
      - user_id
      filter:
        user_id:
          _eq: X-Hasura-User-Id
      check:
        user_id:
          _eq: X-Hasura-User-Id
      set:
        user_id: x-hasura-user-id
  - role: user
    permission:
      columns:
      - meta
      - path
      - status
      filter:
        user_id:
          _eq: X-Hasura-User-Id
      check:
        user_id:
          _eq: X-Hasura-User-Id
      set:
        collection_id: x-hasura-collection-id
        user_id: x-hasura-user-id
  delete_permissions:
  - role: me
    permission:
      filter:
        user_id:
          _eq: X-Hasura-User-Id
- table:
    schema: public
    name: layouts
  object_relationships:
  - name: site
    using:
      foreign_key_constraint_on: site_id
  - name: user
    using:
      foreign_key_constraint_on: user_id
  insert_permissions:
  - role: me
    permission:
      check: {}
      set:
        user_id: x-hasura-user-id
      columns:
      - id
      - name
      - site_id
      - status
      - value
      backend_only: false
  select_permissions:
  - role: anonymous
    permission:
      columns:
      - id
      - name
      - site_id
      - status
      - value
      filter: {}
      allow_aggregations: true
  - role: me
    permission:
      columns:
      - created_at
      - id
      - name
      - site_id
      - status
      - updated_at
      - user_id
      - value
      filter:
        user_id:
          _eq: X-Hasura-User-Id
      allow_aggregations: true
  - role: public
    permission:
      columns:
      - id
      - name
      - site_id
      - status
      - value
      filter: {}
      allow_aggregations: true
  - role: user
    permission:
      columns:
      - created_at
      - id
      - name
      - site_id
      - status
      - updated_at
      - value
      filter: {}
      allow_aggregations: true
  update_permissions:
  - role: me
    permission:
      columns:
      - id
      - name
      - site_id
      - status
      - user_id
      - value
      filter:
        user_id:
          _eq: X-Hasura-User-Id
      check: null
      set:
        user_id: x-hasura-user-id
  - role: user
    permission:
      columns:
      - name
      - value
      filter: {}
      check: null
  delete_permissions:
  - role: me
    permission:
      filter: {}
  - role: user
    permission:
      filter: {}
- table:
    schema: public
    name: options
  object_relationships:
  - name: site
    using:
      foreign_key_constraint_on: site_id
  - name: user
    using:
      foreign_key_constraint_on: user_id
  insert_permissions:
  - role: me
    permission:
      check: {}
      set:
        user_id: x-hasura-user-id
      columns:
      - id
      - key
      - site_id
      - status
      - value
      backend_only: false
  select_permissions:
  - role: anonymous
    permission:
      columns:
      - id
      - key
      - site_id
      - status
      - value
      filter: {}
      allow_aggregations: true
  - role: me
    permission:
      columns:
      - created_at
      - id
      - key
      - site_id
      - status
      - updated_at
      - user_id
      - value
      filter: {}
      allow_aggregations: true
  - role: public
    permission:
      columns:
      - id
      - key
      - site_id
      - status
      - value
      filter: {}
      allow_aggregations: true
  - role: user
    permission:
      columns:
      - created_at
      - id
      - key
      - site_id
      - status
      - updated_at
      - user_id
      - value
      filter: {}
      limit: 100
      allow_aggregations: true
  update_permissions:
  - role: me
    permission:
      columns:
      - key
      - site_id
      - status
      - value
      filter:
        user_id:
          _eq: X-Hasura-User-Id
      check:
        user_id:
          _eq: X-Hasura-User-Id
      set:
        user_id: x-hasura-user-id
  - role: user
    permission:
      columns:
      - key
      - value
      filter:
        user_id:
          _eq: X-Hasura-User-Id
      check:
        user_id:
          _eq: X-Hasura-User-Id
      set:
        site_id: x-hasura-site-id
        user_id: x-hasura-user-id
  delete_permissions:
  - role: me
    permission:
      filter:
        user_id:
          _eq: X-Hasura-User-Id
  - role: user
    permission:
      filter:
        user_id:
          _eq: X-Hasura-User-Id
- table:
    schema: public
    name: pages
  object_relationships:
  - name: collection
    using:
      foreign_key_constraint_on: collection_id
  - name: site
    using:
      foreign_key_constraint_on: site_id
  - name: user
    using:
      foreign_key_constraint_on: user_id
  insert_permissions:
  - role: me
    permission:
      check: {}
      set:
        user_id: x-hasura-user-id
      columns:
      - collection_id
      - content
      - id
      - is_home
      - name
      - site_id
      - slug
      - status
      backend_only: false
  - role: user
    permission:
      check: {}
      set:
        user_id: x-hasura-user-id
      columns:
      - collection_id
      - content
      - id
      - is_home
      - name
      - site_id
      - slug
      - status
      backend_only: false
  select_permissions:
  - role: anonymous
    permission:
      columns:
      - content
      - id
      - is_home
      - name
      - site_id
      - slug
      - status
      filter: {}
  - role: me
    permission:
      columns:
      - collection_id
      - content
      - created_at
      - id
      - is_home
      - name
      - site_id
      - slug
      - status
      - updated_at
      - user_id
      filter: {}
      allow_aggregations: true
  - role: public
    permission:
      columns:
      - collection_id
      - content
      - id
      - is_home
      - name
      - site_id
      - slug
      - status
      filter: {}
  - role: user
    permission:
      columns:
      - collection_id
      - content
      - created_at
      - id
      - is_home
      - name
      - site_id
      - slug
      - status
      - updated_at
      - user_id
      filter:
        user_id:
          _eq: X-Hasura-User-Id
  update_permissions:
  - role: me
    permission:
      columns:
      - collection_id
      - content
      - id
      - is_home
      - name
      - site_id
      - slug
      - status
      - user_id
      filter:
        user_id:
          _eq: X-Hasura-User-Id
      check:
        user_id:
          _eq: X-Hasura-User-Id
      set:
        user_id: x-hasura-user-id
  - role: user
    permission:
      columns:
      - collection_id
      - content
      - is_home
      - name
      - slug
      - status
      filter:
        user_id:
          _eq: X-Hasura-User-Id
      check:
        user_id:
          _eq: X-Hasura-User-Id
  delete_permissions:
  - role: me
    permission:
      filter:
        user_id:
          _eq: X-Hasura-User-Id
- table:
    schema: public
    name: sites
  object_relationships:
  - name: user
    using:
      foreign_key_constraint_on: user_id
  array_relationships:
  - name: collections
    using:
      foreign_key_constraint_on:
        column: site_id
        table:
          schema: public
          name: collections
  - name: layouts
    using:
      foreign_key_constraint_on:
        column: site_id
        table:
          schema: public
          name: layouts
  - name: options
    using:
      foreign_key_constraint_on:
        column: site_id
        table:
          schema: public
          name: options
  - name: pages
    using:
      foreign_key_constraint_on:
        column: site_id
        table:
          schema: public
          name: pages
  insert_permissions:
  - role: me
    permission:
      check: {}
      set:
        user_id: x-hasura-user-id
      columns:
      - description
      - id
      - name
      - slug
      - status
      backend_only: false
  - role: user
    permission:
      check: {}
      set:
        user_id: x-hasura-user-id
      columns:
      - description
      - name
      - slug
      - status
      backend_only: false
  select_permissions:
  - role: anonymous
    permission:
      columns:
      - description
      - id
      - name
      - slug
      - status
      filter: {}
      limit: 1
      allow_aggregations: true
  - role: me
    permission:
      columns:
      - id
      - created_at
      - updated_at
      - name
      - slug
      - description
      - user_id
      - status
      filter: {}
      allow_aggregations: true
  - role: public
    permission:
      columns:
      - description
      - id
      - name
      - slug
      - status
      filter: {}
      limit: 1
      allow_aggregations: true
  - role: user
    permission:
      columns:
      - created_at
      - description
      - id
      - name
      - slug
      - status
      - updated_at
      - user_id
      filter: {}
      allow_aggregations: true
  update_permissions:
  - role: me
    permission:
      columns:
      - description
      - name
      - slug
      - status
      filter:
        user_id:
          _eq: X-Hasura-User-Id
      check:
        user_id:
          _eq: X-Hasura-User-Id
      set:
        user_id: x-hasura-user-id
  - role: user
    permission:
      columns:
      - description
      - name
      - slug
      - status
      filter:
        user_id:
          _eq: X-Hasura-User-Id
      check:
        user_id:
          _eq: X-Hasura-User-Id
  delete_permissions:
  - role: me
    permission:
      filter:
        user_id:
          _eq: X-Hasura-User-Id
- table:
    schema: public
    name: users
  object_relationships:
  - name: account
    using:
      manual_configuration:
        remote_table:
          schema: auth
          name: accounts
        insertion_order: null
        column_mapping:
          id: user_id
  array_relationships:
  - name: collections
    using:
      foreign_key_constraint_on:
        column: user_id
        table:
          schema: public
          name: collections
  - name: images
    using:
      foreign_key_constraint_on:
        column: user_id
        table:
          schema: public
          name: images
  - name: layouts
    using:
      foreign_key_constraint_on:
        column: user_id
        table:
          schema: public
          name: layouts
  - name: options
    using:
      foreign_key_constraint_on:
        column: user_id
        table:
          schema: public
          name: options
  - name: pages
    using:
      foreign_key_constraint_on:
        column: user_id
        table:
          schema: public
          name: pages
  - name: sites
    using:
      foreign_key_constraint_on:
        column: user_id
        table:
          schema: public
          name: sites
  select_permissions:
  - role: anonymous
    permission:
      columns:
      - avatar_url
      - display_name
      - id
      filter: {}
      limit: 1
  - role: me
    permission:
      columns:
      - id
      - created_at
      - updated_at
      - display_name
      - avatar_url
      filter:
        id:
          _eq: X-Hasura-User-Id
      allow_aggregations: true
  - role: public
    permission:
      columns:
      - avatar_url
      - display_name
      - id
      filter: {}
      limit: 1
  - role: user
    permission:
      columns:
      - avatar_url
      - created_at
      - display_name
      - id
      - updated_at
      filter: {}
      limit: 10
  update_permissions:
  - role: me
    permission:
      columns:
      - avatar_url
      - display_name
      filter:
        id:
          _eq: X-Hasura-User-Id
      check:
        id:
          _eq: X-Hasura-User-Id
  - role: user
    permission:
      columns:
      - avatar_url
      - display_name
      filter:
        id:
          _eq: X-Hasura-User-Id
      check:
        id:
          _eq: X-Hasura-User-Id
